-- File: ./vhdl/counter.vhd
-- Generated by MyHDL 0.9.0
-- Date: Tue May  3 14:58:24 2016


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;


Library UNISIM;
use UNISIM.vcomponents.all;

use work.pck_myhdl_090.all;


entity counter is
    port (
        clk: in std_logic;
        reset: in std_logic;
        en: in std_logic;
        count: out std_logic_vector(25 downto 0)
    );
end entity counter;


architecture MyHDL of counter is





signal counter: unsigned(7 downto 0);
signal count_num: unsigned(7 downto 0);

begin

count <= std_logic_vector(count_num);




COUNTER_LOGIC: process (clk) is
begin
    if rising_edge(clk) then
        if bool(reset) then
            counter <= to_unsigned(0, 8);
        elsif bool(en) then
            counter <= ((counter + 1) mod 256);
        end if;
    end if;
end process COUNTER_LOGIC;



count_num <= counter;

end architecture MyHDL;
